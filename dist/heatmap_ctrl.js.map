{"version":3,"sources":["../src/heatmap_ctrl.js"],"names":["MetricsPanelCtrl","_","HeatmapCtrl","$scope","$injector","$timeout","variableSrv","timeSrv","events","on","onDataReceived","bind","overviewModel","focusModel","scope","initialiseConfig","config","colors","sortOrder","apiAddress","marginBetweenOverviewAndFocus","initialiseOverviewConfig","initialiseFocusAreaConfig","initialiseFocusGraphConfig","overview","pointWidth","groupedPointHeight","ungroupedPointHeight","verticalMarginalBetweenMetrics","horizontalMarginBetweenMetrics","marginBetweenInstances","startingGreyColor","endingGrayColor","groupBarWidth","focusArea","color","size","xCrossSize","focusGraph","metricMaxHeight","marginBetweenMetrics","maxWidth","maxHeight","elem","initialiseControl","initialiseUIFunctions","initialiseUIElements","ctrl","enums","overviewMode","SEPARATED","INTEGRATED","linkingMode","X_CROSS","NORMAL_CROSS","CHANGE_COLOR","isGrouped","parent","selectOverviewMode","selectLinker","groupUngroup","moveFocusArea","evt","fixFocusArea","selectNode","index","overviewCanvas","getElementByID","overviewContext","getContext","focusAreaCanvas","focusAreaContext","focusGraphWidth","focusGraphHeight","focusGraphContainer","focusGraphTable","id","find","data","isUpdatingVariable","load","isLoading","$apply","metricList","loadCount","fromDate","getDateInSeconds","timeRange","from","_d","toDate","to","getDataFromAPI","processRawData","date","Math","round","getTime","metric","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","result","url","encodeURIComponent","open","send","length","includes","convertDataToFloat","initialiseMetricMinMaxTotal","initialiseColorMap","initiliseOverviewData","initialiseOverviewGroups","renderOverview","forEach","instance","values","value","parseFloat","min","max","point","checkAndSetOverviewMinMax","layerRange","colorMap","getColorMap","Map","i","threshold","average","set","populateOverviewData","calculateInstanceMetricTotalMinMax","sortOverviewData","metricIndex","metricInstance","newInstance","search","initaliseNewInstance","push","total","getThresholdAverage","map","sort","first","second","groupList","group","checkInstanceInGroup","initialiseNewGroup","instanceList","instanceMetric","groupMetric","clearFocus","drawOverviewData","hasFocus","clearRect","width","height","getInstanceHorizontalLength","overviewWidth","overviewHeight","drawSeparated","overviewInstanceHeight","drawIntengrated","focusGraphMarginTop","getMaxMetricLength","instanceIndex","y","pointIndex","x","getColorFromMap","fillStyle","fillRect","metricWidth","drawGrouped","drawUngrouped","groupIndex","drawOverviewInstance","pointHeigh","overviewMetric","startX","endX","drawGroupBars","colorStep","drawGroupBarAtPosition","greyValue","floor","drawFocusArea","changedGroupMode","focusAreaIsFixed","drawFocus","preventDefault","mousePosition","getMousePos","drawFocusGraph","autoSrollFocusGraph","canvas","rect","getBoundingClientRect","clientX","left","clientY","top","getFocusAreaSize","focusStartY","drawMultipleFocusArea","drawSingleFocusArea","focusStartX","strokeStyle","strokeRect","doDrawLinkers","offset","getFocusAreaOffset","drawLinkers","checkMouseIsInMetric","mousePositionXOffset","sourceMetricIndex","pixelData","getImageData","getLinkerTargetInstance","drawLinkersByMode","drawXCross","drawNormalCross","changeInstanceColor","centerX","leftBeginX","rightBeginX","bottomInstance","drawXCrossLine","startY","endY","drawLineOnFocusAreaCanvas","beginPath","moveTo","lineTo","stroke","closePath","focusSize","centertX","distanceBetweenLines","leftLineX","rightLineX","topLineY","bottomLineY","drawNormalCrossLines","instancePoint","metricInstanceIndex","metricPoint","initialiseFocusGraphData","focusRowHeight","offsetHeight","drawFocusGraphData","firstInstance","checkInstanceInFocus","focusInstance","initialiseFocusInstance","getIndexesOfPointsInFocus","indexes","overviewInstance","indexList","addFocusMetrics","initialiseInstanceLayers","focusMetric","layerList","layer","valueList","context","layerIndex","previousX","previousValue","valueIndex","moveContextBasedOnValue","graphBeginX","fill","scrollByInstance","getFirstInstanceOfSelectedGroup","focusModelInstance","isSelected","scrollTop","j","scrollLeft","updateVariable","variables","v","name","setOptionAsCurrent","text","variableUpdated","templateUrl"],"mappings":"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","sourcesContent":["import { MetricsPanelCtrl } from \"app/plugins/sdk\";\nimport \"./heatmap.css!\";\nimport _ from \"lodash\";\n\nexport class HeatmapCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, $timeout, variableSrv, timeSrv) {\n        super($scope, $injector);\n        this.$timeout = $timeout;\n        this.variableSrv = variableSrv;\n        this.timeSrv = timeSrv;\n        this.events.on(\"data-received\", this.onDataReceived.bind(this));\n        this.overviewModel = {};\n        this.focusModel = {};\n        this.scope.focusModel = this.focusModel;\n        this.initialiseConfig();\n    }\n\n    initialiseConfig() {\n        this.config = {\n            // color schemes for metrics\n            colors: [\n                [\"f2d9e6\", \"d98cb3\", \"bf4080\", \"73264d\"], // red\n                [\"ccddff\", \"6699ff\", \"0055ff\", \"003399\"], // blue\n                [\"eeeedd\", \"cccc99\", \"aaaa55\", \"666633\"], // green\n            ],\n\n            // determines which the order of attributes to use for sorting\n            sortOrder: [0, 1, 2],\n\n            apiAddress: \"http://localhost:3000/api/datasources/proxy/1/api/v1/query_range?query=\",\n            marginBetweenOverviewAndFocus: 50,\n        }\n\n        this.initialiseOverviewConfig();\n        this.initialiseFocusAreaConfig();\n        this.initialiseFocusGraphConfig();\n    }\n\n    initialiseOverviewConfig() {\n        this.config.overview = {\n            pointWidth: 1,\n            groupedPointHeight: 5,\n            ungroupedPointHeight: 1,\n            verticalMarginalBetweenMetrics: 2,\n            horizontalMarginBetweenMetrics: 30,\n            marginBetweenInstances: 6,\n            startingGreyColor: 240,\n            endingGrayColor: 80,\n            groupBarWidth: 9,\n        }\n    }\n\n    initialiseFocusAreaConfig() {\n        this.config.focusArea = {\n            color: \"Aqua\",\n            size: 20,\n            xCrossSize: 15\n        }\n    }\n\n    initialiseFocusGraphConfig() {\n        this.config.focusGraph = {\n            pointWidth: 20,\n            metricMaxHeight: 30,\n            marginBetweenMetrics: 10,\n            maxWidth: 10000,\n            maxHeight: 10000\n        }\n    }\n\n    link(scope, elem) {\n        this.scope = scope;\n        this.elem = elem;\n\n        this.initialiseControl();\n        this.initialiseUIFunctions();\n        this.initialiseUIElements();\n    }\n\n    initialiseControl() {\n        this.scope.ctrl.enums = {\n            overviewMode: {\n                SEPARATED: \"1\",\n                INTEGRATED: \"2\"\n            },\n\n            linkingMode: {\n                X_CROSS: \"1\",\n                NORMAL_CROSS: \"2\",\n                CHANGE_COLOR: \"3\",\n            }\n        };\n\n        this.scope.ctrl.overviewMode = this.scope.ctrl.enums.overviewMode.SEPARATED;\n        this.scope.ctrl.linkingMode = this.scope.ctrl.enums.linkingMode.X_CROSS;\n        this.scope.ctrl.isGrouped = true;\n    }\n\n    initialiseUIFunctions() {\n        var parent = this;\n\n        this.scope.selectOverviewMode = function () {\n            parent.selectOverviewMode();\n        }\n\n        this.scope.selectLinker = function () {\n            parent.selectLinker();\n        }\n\n        this.scope.groupUngroup = function () {\n            parent.groupUngroup();\n        }\n\n        this.scope.moveFocusArea = function (evt) {\n            parent.moveFocusArea.bind(parent, evt)();\n        }\n\n        this.scope.fixFocusArea = function (evt) {\n            parent.fixFocusArea.bind(parent, evt)();\n        }\n\n        this.scope.selectNode = function (index) {\n            parent.selectNode.bind(parent, index)();\n        }\n    }\n\n    initialiseUIElements() {\n        // overview\n        this.overviewCanvas = this.getElementByID(\"overviewCanvas\");\n        this.overviewContext = this.overviewCanvas.getContext(\"2d\");\n\n        // focus area\n        this.focusAreaCanvas = this.getElementByID(\"focusAreaCanvas\");\n        this.focusAreaContext = this.focusAreaCanvas.getContext(\"2d\");\n\n        // focus graph\n        this.scope.ctrl.focusGraphWidth = this.config.focusGraph.maxWidth;\n        this.scope.ctrl.focusGraphHeight = this.config.focusGraph.maxHeight;\n        this.focusGraphContainer = this.getElementByID(\"focusGraphContainer\");\n        this.focusGraphTable = this.getElementByID(\"focusGraphTable\");\n    }\n\n    getElementByID(id) {\n        return this.elem.find(\"#\" + id)[0];\n    }\n\n    onDataReceived(data) {\n        if (this.isUpdatingVariable) {\n            this.isUpdatingVariable = false;\n        } else {\n            this.load();\n        }\n    }\n\n    load() {\n        this.$timeout(() => {\n            if (this.scope.ctrl.isLoading) {\n                this.load();\n            } else {\n                this.scope.ctrl.isLoading = true;\n                this.scope.$apply();\n                this.overviewModel.metricList = [null, null, null];\n                this.loadCount = 0;\n                this.fromDate = this.getDateInSeconds(this.timeSrv.timeRange().from._d);\n                this.toDate = this.getDateInSeconds(this.timeSrv.timeRange().to._d);\n\n                this.getDataFromAPI(\"node_load1{job='node'}\", 0);\n\n                this.getDataFromAPI(`\n                        100 - (node_memory_MemFree_bytes{job='node'} - node_memory_Cached_bytes{job='node'}) \n                                * 100 / \n                                (node_memory_MemTotal_bytes{job='node'} + node_memory_Buffers_bytes{job='node'})\n                    `, 1);\n\n                this.getDataFromAPI(`\n                    100 - (sum by (instance) (node_filesystem_avail_bytes{job='node',device!~'(?:rootfs|/dev/loop.+)',\n                                                                            mountpoint!~'(?:/mnt/nfs/|/run|/var/run|/cdrom).*'})) \n                                * 100 / \n                            (sum by (instance) (node_filesystem_size_bytes{job='node',device!~'rootfs'}))\n                `, 2);\n\n                this.processRawData();\n            }\n        });\n    }\n\n    getDateInSeconds(date) {\n        return Math.round(date.getTime() / 1000);\n    }\n\n    getDataFromAPI(metric, index) {\n        var xmlHttp = new XMLHttpRequest();\n\n        xmlHttp.onreadystatechange = () => {\n            // received response\n            if (xmlHttp.readyState == 4) {\n                ++this.loadCount;\n\n                if (xmlHttp.status == 200) {\n                    var metric = {}\n                    metric.data = JSON.parse(xmlHttp.responseText).data.result;\n                    this.overviewModel.metricList[index] = metric;\n                }\n            }\n        }\n\n        var url = this.config.apiAddress + encodeURIComponent(metric) + \"&start=\" + this.fromDate + \"&end=\" + this.toDate + \"&step=60\";\n        xmlHttp.open(\"GET\", url, true);\n        xmlHttp.send(null);\n    }\n\n    processRawData() {\n        this.$timeout(() => {\n            if (this.loadCount < this.overviewModel.metricList.length) {\n                this.processRawData.bind(this)();\n            } else {\n                this.scope.ctrl.isLoading = false;\n\n                if (!this.overviewModel.metricList.includes(null)) {\n                    this.convertDataToFloat();\n                    this.initialiseMetricMinMaxTotal();\n                    this.initialiseColorMap();\n                    this.initiliseOverviewData();\n                    this.initialiseOverviewGroups();\n                    this.renderOverview();\n                }\n            }\n        }, 100);\n    }\n\n    convertDataToFloat() {\n        this.overviewModel.metricList.forEach((metric) => {\n            metric.data.forEach((instance) => {\n                instance.values.forEach((value) => {\n                    value[0] = parseFloat(value[0]);\n                    value[1] = parseFloat(value[1]);\n                });\n            });\n        });\n    }\n\n    initialiseMetricMinMaxTotal() {\n        this.overviewModel.metricList.forEach((metric) => {\n            metric.min = -1;\n            metric.max = -1;\n\n            metric.data.forEach((instance) => {\n                instance.values.forEach((point) => {\n                    this.checkAndSetOverviewMinMax(metric, point);\n                });\n            });\n        });\n    }\n\n    checkAndSetOverviewMinMax(metric, point) {\n        var value = point[1];\n\n        if (metric.min == -1) {\n            metric.min = value;\n            metric.max = value;\n        } else {\n            if (value < metric.min) {\n                metric.min = value;\n            }\n\n            if (value > metric.max) {\n                metric.max = value;\n            }\n        }\n    }\n\n    initialiseColorMap() {\n        this.overviewModel.metricList.forEach((metric, index) => {\n            var colors = this.config.colors[index];\n            metric.layerRange = metric.max / colors.length;\n\n            // map a range of values to a color\n            metric.colorMap = this.getColorMap(metric, colors);\n        });\n    }\n\n    getColorMap(metric, colors) {\n        var colorMap = new Map();\n\n        for (var i = 0; i < colors.length; ++i) {\n            var threshold = {};\n            threshold.min = i * metric.layerRange;\n            threshold.max = threshold.min + metric.layerRange;\n            threshold.average = (threshold.max + threshold.min) / 2\n            colorMap.set(threshold, colors[i]);\n        }\n\n        return colorMap;\n    }\n\n    initiliseOverviewData() {\n        this.overviewModel.data = [];\n        this.populateOverviewData();\n        this.calculateInstanceMetricTotalMinMax();\n        this.sortOverviewData();\n    }\n\n    populateOverviewData() {\n        this.overviewModel.metricList.forEach((metric, metricIndex) => {\n            metric.data.forEach((metricInstance) => {\n                var newInstance = _.find(this.overviewModel.data, (search) => {\n                    return metricInstance.metric.instance == search.instance;\n                });\n\n                if (!newInstance) {\n                    newInstance = this.initaliseNewInstance(metricInstance);\n                }\n\n                metricInstance.values.forEach((value) => {\n                    var point = {};\n                    point.date = value[0];\n                    point.value = value[1];\n                    newInstance.metricList[metricIndex].data.push(point);\n                });\n            });\n        });\n    }\n\n    initaliseNewInstance(metricInstance) {\n        var newInstance = {};\n        newInstance.instance = metricInstance.metric.instance;\n\n        newInstance.metricList = [];\n\n        for (var i = 0; i < this.config.colors.length; ++i) {\n            var metric = {};\n            metric.data = [];\n            newInstance.metricList.push(metric);\n        }\n\n        this.overviewModel.data.push(newInstance);\n        return newInstance;\n    }\n\n    calculateInstanceMetricTotalMinMax() {\n        this.overviewModel.data.forEach((instance) => {\n            instance.metricList.forEach((metric, metricIndex) => {\n                metric.total = 0;\n                metric.min = -1;\n                metric.max = -1;\n\n                metric.data.forEach((point) => {\n                    // sum the \"threshold\" average of each data point instead of the actual value of the data point \n                    metric.total += this.getThresholdAverage(point.value, this.overviewModel.metricList[metricIndex].colorMap);\n\n                    if (metric.min == -1 || point.value < metric.min) {\n                        metric.min = point.value;\n                    }\n\n                    if (metric.max == -1 || point.value > metric.max) {\n                        metric.max = point.value;\n                    }\n                })\n            });\n        });\n    }\n\n    getThresholdAverage(value, map) {\n        var result;\n\n        map.forEach((color, threshold) => {\n            if (threshold.min <= value && value <= threshold.max) {\n                result = threshold.average;\n            }\n        });\n\n        return result;\n    }\n\n    sortOverviewData() {\n        this.overviewModel.data.sort((first, second) => {\n            for (var i = 0; i < this.config.sortOrder.length; ++i) {\n                var metricIndex = this.config.sortOrder[i];\n\n                if (first.metricList[metricIndex].total != second.metricList[metricIndex].total) {\n                    return first.metricList[metricIndex].total - second.metricList[metricIndex].total;\n                }\n            }\n\n            return 0;\n        });\n    }\n\n    initialiseOverviewGroups() {\n        this.overviewModel.groupList = [];\n\n        this.overviewModel.data.forEach((instance) => {\n            var group = _.find(this.overviewModel.groupList, (search) => {\n                return this.checkInstanceInGroup(instance, search);\n            });\n\n            if (!group) {\n                group = this.initialiseNewGroup(instance);\n                this.overviewModel.groupList.push(group);\n            }\n\n            group.instanceList.push(instance);\n        });\n    }\n\n    checkInstanceInGroup(instance, group) {\n        for (var i = 0; i < instance.metricList.length; ++i) {\n            if (instance.metricList[i].total != group.metricList[i].total) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    initialiseNewGroup(instance) {\n        var group = {};\n        group.metricList = [];\n        group.instanceList = [];\n\n        instance.metricList.forEach((instanceMetric) => {\n            var groupMetric = {};\n            groupMetric.total = instanceMetric.total;\n            group.metricList.push(groupMetric);\n        });\n\n        return group;\n    }\n\n    renderOverview() {\n        if (this.overviewModel.data.length > 0) {\n            this.clearFocus();\n            this.drawOverviewData();\n        }\n    }\n\n    clearFocus() {\n        this.hasFocus = false;\n        this.focusAreaContext.clearRect(0, 0, this.focusAreaCanvas.width, this.focusAreaCanvas.height);\n    }\n\n    drawOverviewData() {\n        this.$timeout(() => {\n            this.overviewContext.clearRect(0, 0, this.overviewCanvas.width, this.overviewCanvas.height);\n            var length = this.getInstanceHorizontalLength();\n\n            if (this.scope.ctrl.overviewMode == this.scope.ctrl.enums.overviewMode.SEPARATED) {\n                this.scope.ctrl.overviewWidth = length * this.config.overview.pointWidth;\n\n                if (this.scope.ctrl.isGrouped) {\n                    this.scope.ctrl.overviewHeight = this.overviewModel.groupList.length * this.config.overview.groupedPointHeight;\n                } else {\n                    this.scope.ctrl.overviewHeight = this.overviewModel.data.length * this.config.overview.ungroupedPointHeight;\n                }\n\n                this.scope.$apply();\n                this.drawSeparated();\n            } else {\n                this.overviewModel.overviewInstanceHeight =\n                    this.config.overview.ungroupedPointHeight * this.overviewModel.metricList.length +\n                    this.config.overview.verticalMarginalBetweenMetrics * (this.overviewModel.metricList.length - 1) +\n                    this.config.overview.marginBetweenInstances;\n                this.scope.ctrl.overviewWidth = length * this.config.overview.pointWidth;\n                this.scope.ctrl.overviewHeight = this.overviewModel.data.length * this.overviewModel.overviewInstanceHeight;\n                this.scope.$apply();\n                this.drawIntengrated();\n            };\n\n            this.scope.ctrl.focusGraphMarginTop = this.scope.ctrl.overviewHeight + this.config.marginBetweenOverviewAndFocus;\n        });\n    }\n\n    getInstanceHorizontalLength() {\n        var length = this.getMaxMetricLength();\n\n        if (this.scope.ctrl.overviewMode == this.scope.ctrl.enums.overviewMode.SEPARATED) {\n            return length * this.overviewModel.metricList.length +\n                (this.overviewModel.metricList.length - 1) * this.config.overview.horizontalMarginBetweenMetrics;\n        } else {\n            return length;\n        }\n    }\n\n    getMaxMetricLength() {\n        var length = 0;\n\n        this.overviewModel.metricList.forEach((metric) => {\n            metric.data.forEach((point) => {\n                if (point.values.length > length) {\n                    length = point.values.length;\n                }\n            });\n        });\n\n        return length;\n    }\n\n    drawIntengrated() {\n        this.overviewModel.data.forEach((instance, instanceIndex) => {\n            instance.y = instanceIndex * this.overviewModel.overviewInstanceHeight;\n\n            instance.metricList.forEach((metric, metricIndex) => {\n                metric.data.forEach((point, pointIndex) => {\n                    point.x = pointIndex * this.config.overview.pointWidth;\n                    point.color = this.getColorFromMap(point.value, this.overviewModel.metricList[metricIndex].colorMap);\n                    this.overviewContext.fillStyle = point.color;\n                    var y = instance.y + metricIndex * this.config.overview.ungroupedPointHeight * this.config.overview.verticalMarginalBetweenMetrics;\n                    this.overviewContext.fillRect(point.x, y, this.config.overview.ungroupedPointHeight, this.config.overview.ungroupedPointHeight);\n                });\n            });\n        });\n    }\n\n    getColorFromMap(value, map) {\n        var result;\n\n        map.forEach((color, threshold) => {\n            if (threshold.min <= value && value <= threshold.max) {\n                result = color;\n            }\n        });\n\n        return \"#\" + result;\n    }\n\n    drawSeparated() {\n        this.overviewModel.metricWidth = this.getMaxMetricLength() * this.config.overview.pointWidth;\n\n        if (this.scope.ctrl.isGrouped) {\n            this.drawGrouped();\n        } else {\n            this.drawUngrouped();\n        }\n    }\n\n    drawGrouped() {\n        this.overviewModel.overviewInstanceHeight = this.config.overview.groupedPointHeight;\n\n        this.overviewModel.groupList.forEach((group, groupIndex) => {\n            var instance = group.instanceList[0];\n            this.drawOverviewInstance(instance, groupIndex, this.config.overview.groupedPointHeight);\n        });\n    }\n\n    drawOverviewInstance(instance, index, pointHeigh) {\n        instance.metricList.forEach((metric, metricIndex) => {\n            instance.y = index * pointHeigh;\n            var overviewMetric = this.overviewModel.metricList[metricIndex];\n            overviewMetric.startX = this.overviewModel.metricWidth * metricIndex;\n\n            if (metricIndex > 0) {\n                overviewMetric.startX += this.config.overview.horizontalMarginBetweenMetrics * metricIndex;\n            }\n\n            metric.data.forEach((point, pointIndex) => {\n                point.x = overviewMetric.startX + pointIndex * this.config.overview.pointWidth;\n                point.color = this.getColorFromMap(point.value, this.overviewModel.metricList[metricIndex].colorMap);\n                this.overviewContext.fillStyle = point.color;\n                this.overviewContext.fillRect(point.x, instance.y, this.config.overview.pointWidth, pointHeigh);\n            });\n\n            overviewMetric.endX = overviewMetric.startX + this.overviewModel.metricWidth;\n        });\n    }\n\n    drawUngrouped() {\n        this.overviewModel.overviewInstanceHeight = this.config.overview.ungroupedPointHeight;\n\n        this.overviewModel.data.forEach((instance, instanceIndex) => {\n            this.drawOverviewInstance(instance, instanceIndex, this.config.overview.ungroupedPointHeight);\n        });\n\n        this.drawGroupBars();\n    }\n\n    drawGroupBars() {\n        var colorStep = (this.config.overview.startingGreyColor - this.config.overview.endingGrayColor) / this.overviewModel.groupList.length;\n\n        for (var i = 1; i < this.overviewModel.metricList.length; ++i) {\n            var x = this.overviewModel.metricList[i].startX - this.config.overview.horizontalMarginBetweenMetrics / 2;\n            this.drawGroupBarAtPosition(x, colorStep);\n        }\n    }\n\n    drawGroupBarAtPosition(x, colorStep) {\n        var y = 0;\n\n        this.overviewModel.groupList.forEach((group, groupIndex) => {\n            var greyValue = Math.round(this.config.overview.startingGreyColor - colorStep * groupIndex);\n            var fillStyle = \"rgba(\" + greyValue + \", \" + greyValue + \", \" + greyValue + \", 1)\";\n            this.overviewContext.fillStyle = fillStyle;\n            var height = group.instanceList.length * this.config.overview.ungroupedPointHeight;\n            this.overviewContext.fillRect(x - Math.floor(this.config.overview.groupBarWidth / 2), y,\n                this.config.overview.groupBarWidth, height);\n            y += height;\n        });\n    }\n\n    selectOverviewMode() {\n        this.drawOverviewData();\n    }\n\n    selectLinker() {\n        this.drawFocusArea();\n    }\n\n    groupUngroup() {\n        this.scope.ctrl.isGrouped = !this.scope.ctrl.isGrouped;\n        this.overviewModel.changedGroupMode = true;\n        this.drawOverviewData();\n    }\n\n    moveFocusArea(evt) {\n        if (!this.focusAreaIsFixed) {\n            this.drawFocus(evt);\n            evt.preventDefault();\n        }\n    }\n\n    fixFocusArea(evt) {\n        if (this.focusAreaIsFixed) {\n            this.drawFocus(evt);\n        }\n\n        this.focusAreaIsFixed = !this.focusAreaIsFixed;\n        evt.preventDefault();\n    }\n\n    drawFocus(evt) {\n        this.focusModel.mousePosition = this.getMousePos(evt, this.overviewCanvas);\n        this.drawFocusArea();\n\n        for (var i = 0; i < this.overviewModel.metricList.length; ++i) {\n            var metric = this.overviewModel.metricList[i];\n\n            // only update focus graph if mouse is pointing on one of metric overview graphs\n            if (metric.startX <= this.focusModel.mousePosition.x && this.focusModel.mousePosition.x <= metric.endX) {\n                this.drawFocusGraph();\n                this.autoSrollFocusGraph();\n                break;\n            }\n        }\n    }\n\n    getMousePos(evt, canvas) {\n        var rect = canvas.getBoundingClientRect();\n\n        return {\n            x: evt.clientX - rect.left,\n            y: evt.clientY - rect.top\n        };\n    }\n\n    drawFocusArea() {\n        if (this.focusModel.mousePosition) {\n            var size = this.getFocusAreaSize();\n            this.focusModel.focusStartY = Math.min(Math.max(0, this.focusModel.mousePosition.y - size / 2), this.overviewCanvas.height - size);\n\n            if (this.scope.ctrl.overviewMode == this.scope.ctrl.enums.overviewMode.SEPARATED) {\n                this.drawMultipleFocusArea(true);\n            } else {\n                this.drawSingleFocusArea();\n            }\n        }\n    }\n\n    getFocusAreaSize() {\n        return this.config.focusArea.size * 2;\n    }\n\n    drawSingleFocusArea() {\n        this.clearFocus();\n        var size = this.getFocusAreaSize();\n        this.focusModel.focusStartY = Math.min(Math.max(0, this.focusModel.mousePosition.y - size / 2), this.overviewCanvas.height - this.getFocusAreaSize());\n        this.focusModel.focusStartX = Math.min(Math.max(0, this.focusModel.mousePosition.x - this.config.focusArea.size), this.overviewCanvas.width - size);\n        this.focusAreaContext.strokeStyle = this.config.focusArea.color;\n        this.focusAreaContext.strokeRect(this.focusModel.focusStartX, this.focusModel.focusStartY, size, size);\n    }\n\n    drawMultipleFocusArea(doDrawLinkers) {\n        var size = this.getFocusAreaSize();\n        var offset = this.getFocusAreaOffset();\n\n        if (offset >= 0) {\n            if (doDrawLinkers) {\n                this.clearFocus();\n            }\n\n            this.focusAreaContext.strokeStyle = this.config.focusArea.color;\n\n            this.overviewModel.metricList.forEach((metric) => {\n                metric.focusStartX = metric.startX + offset;\n                this.focusAreaContext.strokeRect(metric.focusStartX, this.focusModel.focusStartY, size, size);\n            });\n\n            if (doDrawLinkers) {\n                this.drawLinkers();\n            }\n        }\n    }\n\n    getFocusAreaOffset() {\n        for (var i = 0; i < this.overviewModel.metricList.length; ++i) {\n            var metric = this.overviewModel.metricList[i];\n\n            if (this.checkMouseIsInMetric(metric)) {\n                this.focusModel.mousePositionXOffset = this.focusModel.mousePosition.x - metric.startX;\n                this.focusModel.sourceMetricIndex = i;\n\n                return Math.min(Math.max(metric.startX,\n                    this.focusModel.mousePosition.x - this.config.focusArea.size),\n                    metric.endX - this.getFocusAreaSize()) - metric.startX;\n            }\n        }\n    }\n\n    checkMouseIsInMetric(metric) {\n        return metric.startX <= this.focusModel.mousePosition.x && this.focusModel.mousePosition.x <= metric.endX;\n    }\n\n    drawLinkers() {\n        var pixelData = this.overviewContext.getImageData(this.focusModel.mousePosition.x, this.focusModel.mousePosition.y, 1, 1).data;\n        this.focusAreaContext.strokeStyle = \"rgb(\" + pixelData[0] + \",\" + pixelData[1] + \",\" + pixelData[2] + \")\";\n        var instance = this.getLinkerTargetInstance();\n        instance = null; // temp flag to prevent drawing linkers\n\n        if (instance) {\n            this.overviewModel.metricList.forEach((metric, index) => {\n                if (!this.checkMouseIsInMetric(metric)) {\n                    this.drawLinkersByMode(metric, instance, index);\n                }\n            });\n        }\n    }\n\n    getLinkerTargetInstance() {\n        for (var i = 0; i < this.overviewModel.data.length; ++i) {\n            var instance = this.overviewModel.data[i];\n\n            if (instance.y - this.config.overview.ungroupedPointHeight <= this.focusModel.mousePosition.y &&\n                this.focusModel.mousePosition.y <= instance.y) {\n                return instance;\n            }\n        }\n    }\n\n    drawLinkersByMode(metric, instance, index) {\n        switch (this.scope.ctrl.linkingMode) {\n            case this.scope.ctrl.enums.linkingMode.X_CROSS:\n                this.drawXCross(metric, instance);\n                break;\n\n            case this.scope.ctrl.enums.linkingMode.NORMAL_CROSS:\n                this.drawNormalCross(metric, instance);\n                break;\n\n            case this.scope.ctrl.enums.linkingMode.CHANGE_COLOR:\n                this.changeInstanceColor(metric, instance, index);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    drawXCross(metric, instance) {\n        var centerX = metric.startX + this.focusModel.mousePositionXOffset;\n        var leftBeginX = centerX - this.config.focusArea.xCrossSize;\n        var rightBeginX = centerX + this.config.overview.pointWidth;\n        var bottomInstance = instance.y + this.config.overview.ungroupedPointHeight;\n\n        this.drawXCrossLine(leftBeginX, instance.y - this.config.focusArea.xCrossSize, instance.y);\n        this.drawXCrossLine(rightBeginX, instance.y, instance.y - this.config.focusArea.xCrossSize);\n        this.drawXCrossLine(leftBeginX, bottomInstance + this.config.focusArea.xCrossSize, bottomInstance);\n        this.drawXCrossLine(rightBeginX, bottomInstance, bottomInstance + this.config.focusArea.xCrossSize);\n    }\n\n    drawXCrossLine(startX, startY, endY) {\n        this.drawLineOnFocusAreaCanvas(startX, startY, startX + this.config.focusArea.xCrossSize, endY);\n    }\n\n    drawLineOnFocusAreaCanvas(startX, startY, endX, endY) {\n        this.focusAreaContext.beginPath();\n        this.focusAreaContext.moveTo(startX, startY);\n        this.focusAreaContext.lineTo(endX, endY);\n        this.focusAreaContext.stroke();\n        this.focusAreaContext.closePath();\n    }\n\n    drawNormalCross(metric, instance) {\n        var focusSize = this.getFocusAreaSize();\n        var centertX = metric.startX + this.focusModel.mousePositionXOffset;\n        var endX = metric.focusStartX + focusSize;\n        var distanceBetweenLines = this.config.overview.pointWidth * 2;\n        var leftLineX = centertX - distanceBetweenLines;\n        var rightLineX = centertX + distanceBetweenLines;\n        var topLineY = instance.y - distanceBetweenLines;\n        var bottomLineY = instance.y + distanceBetweenLines;\n        var endY = this.focusModel.focusStartY + focusSize;\n\n        this.drawNormalCrossLines(metric, endX, leftLineX, rightLineX, topLineY, bottomLineY, endY);\n    }\n\n    drawNormalCrossLines(metric, endX, leftLineX, rightLineX, topLineY, bottomLineY, endY) {\n        // top horizontal\n        this.drawLineOnFocusAreaCanvas(metric.focusStartX, topLineY, leftLineX, topLineY);\n        this.drawLineOnFocusAreaCanvas(rightLineX, topLineY, endX, topLineY);\n\n        // botton horizontal\n        this.drawLineOnFocusAreaCanvas(metric.focusStartX, bottomLineY, leftLineX, bottomLineY);\n        this.drawLineOnFocusAreaCanvas(rightLineX, bottomLineY, endX, bottomLineY);\n\n        // left vertical\n        this.drawLineOnFocusAreaCanvas(leftLineX, this.focusModel.focusStartY, leftLineX, topLineY);\n        this.drawLineOnFocusAreaCanvas(leftLineX, bottomLineY, leftLineX, endY);\n\n        // right vertical\n        this.drawLineOnFocusAreaCanvas(rightLineX, this.focusModel.focusStartY, rightLineX, topLineY);\n        this.drawLineOnFocusAreaCanvas(rightLineX, bottomLineY, rightLineX, endY);\n    }\n\n    changeInstanceColor(metric, instance, index) {\n        if (index == 0) {\n            this.clearFocus();\n        }\n\n        instance.metricList[index].data.forEach((instancePoint, pointIndex) => {\n            var colorMap = this.getColorMap(metric, this.config.colors[this.focusModel.sourceMetricIndex]);\n            this.focusAreaContext.fillStyle = this.getColorFromMap(instancePoint.value, colorMap);\n            this.focusAreaContext.fillRect(instancePoint.x, instance.y, this.overviewModel.overviewInstanceHeight, this.overviewModel.overviewInstanceHeight);\n\n            if (instancePoint.x == metric.startX + this.focusModel.mousePositionXOffset) {\n                // vertical line\n                metric.data.forEach((metricInstance, metricInstanceIndex) => {\n                    var metricPoint = metricInstance.values[pointIndex];\n                    var value = metricPoint ? metricPoint[1] : 0\n                    this.focusAreaContext.fillStyle = this.getColorFromMap(value, colorMap);\n                    this.focusAreaContext.fillRect(instancePoint.x, this.overviewModel.data[metricInstanceIndex].y,\n                        this.overviewModel.overviewInstanceHeight, this.overviewModel.overviewInstanceHeight);\n                });\n            }\n        });\n\n        if (index == instance.metricList.length - 1) {\n            this.drawMultipleFocusArea(false);\n        }\n    }\n\n    drawFocusGraph() {\n        this.initialiseFocusGraphData();\n        this.overviewModel.changedGroupMode = false;\n\n        if (this.focusModel.data.length > 0) {\n            this.$timeout(() => {\n                this.scope.ctrl.focusGraphHeight = this.overviewModel.metricList.length * this.config.focusGraph.metricMaxHeight +\n                    (this.overviewModel.metricList.length - 1) * this.config.focusGraph.marginBetweenMetrics;\n                this.scope.ctrl.focusGraphWidth = this.focusModel.data[0].metricList[0].data.length * this.config.focusGraph.pointWidth;\n                this.scope.$apply();\n                this.focusModel.focusRowHeight = this.getElementByID(\"focusGraphRow-1\").offsetHeight;\n                this.drawFocusGraphData();\n            });\n        }\n    }\n\n    initialiseFocusGraphData() {\n        if (!this.focusModel.data) {\n            this.focusModel.data = [];\n        }\n\n        this.focusModel.data.length = 0;\n\n        if (this.scope.ctrl.isGrouped) {\n            this.overviewModel.groupList.forEach((group, groupIndex) => {\n                var firstInstance = group.instanceList[0];\n\n                if (this.checkInstanceInFocus(firstInstance)) {\n                    var focusInstance = this.initialiseFocusInstance(firstInstance, this.getIndexesOfPointsInFocus(firstInstance));\n                    focusInstance.groupIndex = groupIndex + 1;\n                }\n            });\n        } else {\n            this.overviewModel.data.forEach((instance) => {\n                if (this.checkInstanceInFocus(instance)) {\n                    this.initialiseFocusInstance(instance, this.getIndexesOfPointsInFocus(instance));\n                }\n            });\n        }\n    }\n\n    checkInstanceInFocus(instance) {\n        return instance.y <= this.focusModel.focusStartY + this.getFocusAreaSize() &&\n            instance.y + this.overviewModel.overviewInstanceHeight >= this.focusModel.focusStartY\n    }\n\n    getIndexesOfPointsInFocus(instance) {\n        var indexes = [];\n\n        for (var i = 0; i < instance.metricList.length; ++i) {\n            var metric = instance.metricList[i];\n\n            if (metric.data.length > 0) {\n                var overviewMetric = this.overviewModel.metricList[i];\n\n                metric.data.forEach((point, index) => {\n                    if (overviewMetric.focusStartX <= point.x && point.x <= overviewMetric.focusStartX + this.getFocusAreaSize()) {\n                        indexes.push(index);\n                    }\n                });\n\n                break;\n            }\n        }\n\n        return indexes;\n    }\n\n    initialiseFocusInstance(overviewInstance, indexList) {\n        var focusInstance = {};\n        focusInstance.instance = overviewInstance.instance;\n        focusInstance.metricList = [];\n        this.addFocusMetrics(focusInstance, overviewInstance, indexList);\n        this.initialiseInstanceLayers(focusInstance);\n        this.focusModel.data.push(focusInstance);\n        return focusInstance;\n    }\n\n    addFocusMetrics(focusInstance, overviewInstance, indexList) {\n        this.overviewModel.metricList.forEach((metric, metricIndex) => {\n            var focusMetric = {};\n            focusMetric.data = [];\n            focusMetric.layerList = [];\n\n            indexList.forEach((index) => {\n                var point = overviewInstance.metricList[metricIndex].data[index];\n\n                if (point) {\n                    focusMetric.data.push(point);\n                }\n            });\n\n            focusInstance.metricList.push(focusMetric);\n        });\n    }\n\n    initialiseInstanceLayers(instance) {\n        instance.metricList.forEach((metric, metricIndex) => {\n            this.config.colors[metricIndex].forEach(() => {\n                var layer = {};\n                layer.valueList = [];\n                metric.layerList.push(layer);\n            });\n\n            metric.data.forEach((point) => {\n                var value = point.value;\n\n                metric.layerList.forEach((layer) => {\n                    layer.valueList.push(value > 0 ? value : 0);\n                    value -= this.overviewModel.metricList[metricIndex].layerRange;\n                });\n            });\n        });\n    }\n\n    drawFocusGraphData() {\n        this.focusModel.data.forEach((instance, instanceIndex) => {\n            var canvas = this.getElementByID(\"focusGraphCanvas-\" + instanceIndex);\n            var context = canvas.getContext(\"2d\");\n            context.clearRect(0, 0, canvas.width, canvas.height);\n\n            instance.metricList.forEach((metric, metricIndex) => {\n                metric.layerList.forEach((layer, layerIndex) => {\n                    var y = (this.config.focusGraph.metricMaxHeight + this.config.focusGraph.marginBetweenMetrics) * metricIndex +\n                        this.config.focusGraph.metricMaxHeight;\n                    context.beginPath();\n                    context.moveTo(0, y);\n                    var x = 0;\n                    var previousX = 0;\n                    var previousValue = 0;\n\n                    layer.valueList.forEach((value, valueIndex) => {\n                        x = this.config.focusGraph.pointWidth * valueIndex;\n                        this.moveContextBasedOnValue(context, value, previousX, previousValue, layerIndex, x, y,\n                            this.overviewModel.metricList[metricIndex].layerRange);\n                        previousX = x;\n                        previousValue = value;\n                    });\n\n                    context.lineTo(x, y);\n                    context.lineTo(this.focusModel.graphBeginX, y);\n                    context.closePath();\n                    context.fillStyle = \"#\" + this.config.colors[metricIndex][layerIndex];\n                    context.fill();\n                });\n            });\n        });\n    }\n\n    moveContextBasedOnValue(context, value, previousX, previousValue, layerIndex, x, y, layerRange) {\n        if (value == 0) {\n            // draw line straight down to base if value is 0\n            context.lineTo(previousX, y);\n        } else {\n            // move to current position at base if previous value is 0\n            if (layerIndex > 0 && previousValue == 0) {\n                context.lineTo(x, y);\n            }\n\n            if (value >= layerRange) {\n                context.lineTo(x, y - this.config.focusGraph.metricMaxHeight);\n            } else {\n                context.lineTo(x, y - value * this.config.focusGraph.metricMaxHeight / layerRange);\n            }\n        }\n    }\n\n    autoSrollFocusGraph() {\n        if (this.scope.ctrl.isGrouped) {\n            this.scrollByInstance(this.getFirstInstanceOfSelectedGroup());\n        } else {\n            this.scrollByInstance(this.getLinkerTargetInstance());\n        }\n    }\n\n    scrollByInstance(instance) {\n        for (var i = 0; i < this.focusModel.data.length; ++i) {\n            var focusModelInstance = this.focusModel.data[i];\n\n            if (instance.instance == focusModelInstance.instance) {\n                focusModelInstance.isSelected = true;\n                this.focusGraphContainer.scrollTop = this.focusModel.focusRowHeight * i;\n\n                for (var j = 0; j < instance.metricList.length; ++j) {\n                    var metric = instance.metricList[j];\n\n                    if (metric.data.length > 0) {\n                        var overviewMetric = this.overviewModel.metricList[j];\n\n                        metric.data.forEach((point, pointIndex) => {\n                            if (overviewMetric.focusStartX <= point.x && point.x <= overviewMetric.focusStartX + this.getFocusAreaSize()) {\n                                this.focusGraphContainer.scrollLeft = this.config.focusGraph.pointWidth * pointIndex;\n                            }\n                        });\n\n                        break;\n                    }\n                }\n            } else {\n                focusModelInstance.isSelected = false;\n            }\n        }\n    }\n\n    getFirstInstanceOfSelectedGroup() {\n        for (var i = 0; i < this.overviewModel.groupList.length; ++i) {\n            var group = this.overviewModel.groupList[i];\n            var firstInstance = group.instanceList[0];\n\n            if (firstInstance.y <= this.focusModel.mousePosition.y && this.focusModel.mousePosition.y <=\n                firstInstance.y + this.config.overview.groupedPointHeight) {\n                return firstInstance;\n            }\n        }\n    }\n\n    selectNode(index) {\n        this.focusModel.data.forEach((focusInstance) => {\n            focusInstance.isSelected = false;\n        });\n\n        var instance = this.focusModel.data[index];\n        instance.isSelected = true;\n        this.updateVariable(instance);\n    }\n\n    updateVariable(instance) {\n        this.variableSrv.variables.forEach((v) => {\n            if (v.name == \"node\") {\n                this.variableSrv.setOptionAsCurrent(v, {\n                    text: instance.instance,\n                    value: instance.instance\n                });\n\n                this.isUpdatingVariable = true;\n                this.variableSrv.variableUpdated(v, true);\n            }\n        });\n    }\n}\n\nHeatmapCtrl.templateUrl = \"module.html\";"],"file":"heatmap_ctrl.js"}