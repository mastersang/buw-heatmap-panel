{"version":3,"sources":["../src/heatmap_ctrl.js"],"names":["MetricsPanelCtrl","_","HeatmapCtrl","$scope","$injector","$timeout","variableSrv","timeSrv","events","on","onDataReceived","bind","overviewModel","focusModel","initialiseConfig","config","apiAddress","instancePropertyName","dateFormat","focusAreaColor","focusAreaSize","colors","overviewMode","overviewPointWidth","overviewPointHeight","verticalMarginBetweenOverviewMetrics","horizontalMarginBetweenOverviewMetrics","marginBetweenInstances","focusGraphLeftMargin","xCrossSize","marginBetweenOverviewAndFocus","fontSize","focusPointWidth","focusMetricMaxHeight","marginBetweenFocusMetrics","marginBetweenFocusInstances","scope","elem","attrs","ctrl","linkingMode","parent","selectLinker","moveFocusArea","evt","fixFocusArea","selectNode","initialiseCanvases","data","isUpdatingVariable","load","isLoading","$apply","metricList","loadCount","fromDate","Math","round","timeRange","from","_d","getTime","toDate","to","getDataFromAPI","processRawData","metric","index","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","result","url","encodeURIComponent","open","send","length","includes","convertDataToFloat","initialiseMetricMinMax","initialiseColorMap","initiliseOverviewData","renderOverview","forEach","instance","values","value","parseFloat","min","max","point","checkAndSetOverviewMinMax","colorMap","Map","layerRange","i","threshold","set","metricInstance","newInstance","find","search","initaliseNewInstance","date","push","overviewContext","clearRect","overviewCanvas","width","height","clearFocus","drawOverviewData","drawOverviewDataWrapper","getInstanceHorizontalLength","overviewInstantHeight","overviewWidth","overviewHeight","drawSingleOverview","drawMultipleOverview","focusGraphMarginTop","firstInstance","instanceIndex","y","metricIndex","pointIndex","x","color","getColorFromMap","fillStyle","fillRect","endX","overviewMetric","startX","map","getContext","focusAreaCanvas","focusAreaContext","focusGraphCanvas","focusGraphContext","font","drawFocusArea","focusAreaIsFixed","drawFocus","preventDefault","mousePosition","getMousePos","drawFocusGraph","hasFocus","canvas","rect","getBoundingClientRect","clientX","left","clientY","top","size","getFocusAreaSize","focusStartY","drawSingleFocusArea","drawMultipleFocusArea","focusStartX","strokeStyle","strokeRect","doDrawLinkers","offset","getFocusAreaOffset","drawLinkers","checkMouseIsInMetric","mousePositionXOffset","pixelData","getImageData","getLinkerTargetInstance","drawXCross","drawDoubleLine","changeInstanceColor","leftBeginX","rightBeginX","bottomInstance","drawXCrossLine","startY","endY","drawLineOnFocusAreaCanvas","beginPath","moveTo","lineTo","stroke","closePath","verticalLineX","topLineX","bottonLineX","centerX","leftLineY","rightLineY","initialiseFocusGraphData","drawFocusGraphLabels","drawFocusGraphData","overviewInstance","modalInstance","addFocusMetrics","getIndexesOfPointsInFocus","initialiseInstanceLayers","indexes","focusMetric","layerList","layer","valueList","horizontalX","setLineDash","instanceHeight","drawFocusGraphLabelByInstance","label","metrics","measureText","labelY","fillText","drawSeperator","lineY","layerIndex","previousX","previousValue","valueIndex","moveContextBasedOnValue","fill","mousePos","event","updateVariable","variables","v","name","setOptionAsCurrent","text","variableUpdated","templateUrl"],"mappings":"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","sourcesContent":["import { MetricsPanelCtrl } from \"app/plugins/sdk\";\nimport \"./heatmap.css!\";\nimport _ from \"lodash\";\n\nexport class HeatmapCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, $timeout, variableSrv, timeSrv) {\n        super($scope, $injector);\n        this.$timeout = $timeout;\n        this.variableSrv = variableSrv;\n        this.timeSrv = timeSrv;\n        this.events.on(\"data-received\", this.onDataReceived.bind(this));\n        this.overviewModel = {};\n        this.focusModel = {};\n        this.initialiseConfig();\n    }\n\n    initialiseConfig() {\n        this.config = {\n            apiAddress: \"http://localhost:3000/api/datasources/proxy/1/api/v1/query_range?query=\",\n            instancePropertyName: \"instance\",\n            dateFormat: \"DD-MM-YYYY HH:mm\",\n            focusAreaColor: \"Aqua\",\n            focusAreaSize: 20,\n            colors:\n                [\n                    [\"f2d9e6\", \"d98cb3\", \"bf4080\", \"73264d\"],\n                    [\"ccddff\", \"6699ff\", \"0055ff\", \"003399\"],\n                    [\"eeeedd\", \"cccc99\", \"aaaa55\", \"666633\"]\n                ],\n            overviewMode: 2, // 1 = single, 2 = multiple\n            overviewPointWidth: 1,\n            overviewPointHeight: 1,\n            verticalMarginBetweenOverviewMetrics: 2,\n            horizontalMarginBetweenOverviewMetrics: 20,\n            marginBetweenInstances: 6,\n            focusGraphLeftMargin: 40,\n            xCrossSize: 10,\n            marginBetweenOverviewAndFocus: 50,\n            fontSize: 15,\n            focusPointWidth: 5,\n            focusMetricMaxHeight: 30,\n            marginBetweenFocusMetrics: 10,\n            marginBetweenFocusInstances: 20\n        }\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        this.scope = scope;\n        this.scope.ctrl.linkingMode = \"xCross\";\n        this.elem = elem;\n        var parent = this;\n\n        scope.selectLinker = function () {\n            parent.selectLinker();\n        }\n\n        scope.moveFocusArea = function (evt) {\n            parent.moveFocusArea.bind(parent, evt)();\n        }\n\n        scope.fixFocusArea = function (evt) {\n            parent.fixFocusArea.bind(parent, evt)();\n        }\n\n        scope.selectNode = function () {\n            parent.selectNode.bind(parent)();\n        }\n\n        this.initialiseCanvases();\n    }\n\n    onDataReceived(data) {\n        if (this.isUpdatingVariable) {\n            this.isUpdatingVariable = false;\n        } else {\n            this.load();\n        }\n    }\n\n    load() {\n        this.$timeout(() => {\n            if (this.scope.ctrl.isLoading) {\n                this.load();\n            } else {\n                this.scope.ctrl.isLoading = true;\n                this.scope.$apply();\n                this.overviewModel.metricList = [null, null, null];\n                this.loadCount = 0;\n                this.fromDate = Math.round(this.timeSrv.timeRange().from._d.getTime() / 1000);\n                this.toDate = Math.round(this.timeSrv.timeRange().to._d.getTime() / 1000);\n\n                this.getDataFromAPI(\"node_load1{job='node'}\", 0);\n\n                this.getDataFromAPI(`\n                        100 - (node_memory_MemFree_bytes{job='node'} - node_memory_Cached_bytes{job='node'}) \n                                * 100 / \n                                (node_memory_MemTotal_bytes{job='node'} + node_memory_Buffers_bytes{job='node'})\n                    `, 1);\n\n                this.getDataFromAPI(`\n                    100 - (sum by (instance) (node_filesystem_avail_bytes{job='node',device!~'(?:rootfs|/dev/loop.+)',\n                                                                            mountpoint!~'(?:/mnt/nfs/|/run|/var/run|/cdrom).*'})) \n                                * 100 / \n                            (sum by (instance) (node_filesystem_size_bytes{job='node',device!~'rootfs'}))\n                `, 2);\n\n                this.processRawData();\n            }\n        }, 100);\n    }\n\n    getDataFromAPI(metric, index) {\n        var xmlHttp = new XMLHttpRequest();\n\n        xmlHttp.onreadystatechange = () => {\n            if (xmlHttp.readyState == 4) {\n                ++this.loadCount;\n\n                if (xmlHttp.status == 200) {\n                    var metric = {}\n                    metric.data = JSON.parse(xmlHttp.responseText).data.result;\n                    this.overviewModel.metricList[index] = metric;\n                }\n            }\n        }\n\n        var url = this.config.apiAddress + encodeURIComponent(metric) + \"&start=\" + this.fromDate + \"&end=\" + this.toDate + \"&step=15\";\n        xmlHttp.open(\"GET\", url, true);\n        xmlHttp.send(null);\n    }\n\n    processRawData() {\n        this.$timeout(() => {\n            if (this.loadCount < this.overviewModel.metricList.length) {\n                this.processRawData.bind(this)();\n            } else {\n                this.scope.ctrl.isLoading = false;\n\n                if (!this.overviewModel.metricList.includes(null)) {\n                    this.convertDataToFloat();\n                    this.initialiseMetricMinMax();\n                    this.initialiseColorMap();\n                    this.initiliseOverviewData();\n                    this.renderOverview();\n                }\n            }\n        }, 100);\n    }\n\n    convertDataToFloat() {\n        this.overviewModel.metricList.forEach((metric) => {\n            metric.data.forEach((instance) => {\n                instance.values.forEach((value) => {\n                    value[0] = parseFloat(value[0]);\n                    value[1] = parseFloat(value[1]);\n                });\n            });\n        });\n    }\n\n    initialiseMetricMinMax() {\n        this.overviewModel.metricList.forEach((metric) => {\n            metric.min = -1;\n            metric.max = -1;\n\n            metric.data.forEach((instance) => {\n                instance.values.forEach((point) => {\n                    this.checkAndSetOverviewMinMax(metric, point);\n                });\n            });\n        });\n    }\n\n    checkAndSetOverviewMinMax(metric, point) {\n        var value = point[1];\n\n        if (metric.min == -1) {\n            metric.min = value;\n            metric.max = value;\n        } else {\n            if (value < metric.min) {\n                metric.min = value;\n            }\n\n            if (value > metric.max) {\n                metric.max = value;\n            }\n        }\n    }\n\n    initialiseColorMap() {\n        this.overviewModel.metricList.forEach((metric, index) => {\n            var colors = this.config.colors[index];\n            metric.colorMap = new Map();\n            metric.layerRange = metric.max / (colors.length - 0.5);\n\n            for (var i = 0; i < colors.length; ++i) {\n                var threshold = {};\n                threshold.min = i * metric.layerRange;\n                threshold.max = threshold.min + metric.layerRange;\n                metric.colorMap.set(threshold, colors[i]);\n            }\n        });\n    }\n\n    initiliseOverviewData() {\n        this.overviewModel.data = [];\n\n        this.overviewModel.metricList.forEach((metric, index) => {\n            metric.data.forEach((metricInstance) => {\n                var newInstance = _.find(this.overviewModel.data, (search) => {\n                    return metricInstance.metric.instance == search.instance;\n                });\n\n                if (!newInstance) {\n                    newInstance = this.initaliseNewInstance(metricInstance);\n                }\n\n                metricInstance.values.forEach((value) => {\n                    var point = {};\n                    point.date = value[0];\n                    point.value = value[1];\n                    newInstance.metricList[index].push(point);\n                });\n            });\n        });\n    }\n\n    initaliseNewInstance(metricInstance) {\n        var newInstance = {};\n        newInstance.instance = metricInstance.metric.instance;\n        newInstance.metricList = [[], [], []];\n        this.overviewModel.data.push(newInstance);\n        return newInstance;\n    }\n\n    renderOverview() {\n        if (this.overviewModel.data.length > 0) {\n            this.overviewContext.clearRect(0, 0, this.overviewCanvas.width, this.overviewCanvas.height);\n            this.clearFocus();\n            this.drawOverviewData();\n        }\n    }\n\n    drawOverviewData() {\n        var parent = this;\n\n        this.$timeout(() => {\n            parent.drawOverviewDataWrapper.bind(parent)();\n        }, 100);\n    }\n\n    drawOverviewDataWrapper() {\n        var length = this.getInstanceHorizontalLength();\n\n        if (this.config.overviewMode == 1) {\n            this.overviewModel.overviewInstantHeight = this.config.overviewPointHeight * this.overviewModel.metricList.length +\n                this.config.verticalMarginBetweenOverviewMetrics * (this.overviewModel.metricList.length - 1) + this.config.marginBetweenInstances;\n            this.scope.ctrl.overviewWidth = length * this.config.overviewPointWidth;\n            this.scope.ctrl.overviewHeight = this.overviewModel.data.length * this.overviewModel.overviewInstantHeight;\n            this.scope.$apply();\n            this.drawSingleOverview();\n        } else {\n            this.scope.ctrl.overviewWidth = length * this.config.overviewPointWidth;\n            this.scope.ctrl.overviewHeight = this.overviewModel.data.length * this.config.overviewPointHeight;\n            this.scope.$apply();\n            this.drawMultipleOverview();\n        };\n\n        this.scope.ctrl.focusGraphMarginTop = this.scope.ctrl.overviewHeight + this.config.marginBetweenOverviewAndFocus;\n    }\n\n    getInstanceHorizontalLength() {\n        var firstInstance = this.overviewModel.data[0];\n        var length = 0;\n\n        firstInstance.metricList.forEach((metric, index) => {\n            if (this.config.overviewMode == 1) {\n                if (metric.length > length) {\n                    length = metric.length;\n                }\n            } else {\n                length += metric.length;\n\n                if (index > 0) {\n                    length += this.config.horizontalMarginBetweenOverviewMetrics;\n                }\n            }\n        });\n\n        return length;\n    }\n\n    drawSingleOverview() {\n        this.overviewModel.data.forEach((instance, instanceIndex) => {\n            instance.y = instanceIndex * this.overviewModel.overviewInstantHeight;\n\n            instance.metricList.forEach((metric, metricIndex) => {\n                metric.forEach((point, pointIndex) => {\n                    point.x = pointIndex * this.config.overviewPointWidth;\n                    point.color = this.getColorFromMap(point.value, this.overviewModel.metricList[metricIndex].colorMap);\n                    this.overviewContext.fillStyle = point.color;\n                    var y = instance.y + metricIndex * this.config.overviewPointHeight * this.config.verticalMarginBetweenOverviewMetrics;\n                    this.overviewContext.fillRect(point.x, y, this.config.overviewPointHeight, this.config.overviewPointHeight);\n                });\n            });\n        });\n    }\n\n    drawMultipleOverview() {\n        this.overviewModel.overviewInstantHeight = this.config.overviewPointHeight;\n\n        this.overviewModel.data.forEach((instance, instanceIndex) => {\n            var endX = 0;\n\n            instance.metricList.forEach((metric, metricIndex) => {\n                instance.y = instanceIndex * this.config.overviewPointHeight;\n                var overviewMetric = this.overviewModel.metricList[metricIndex];\n                overviewMetric.startX = endX;\n\n                if (metricIndex > 0) {\n                    overviewMetric.startX += this.config.horizontalMarginBetweenOverviewMetrics\n                }\n\n                metric.forEach((point, pointIndex) => {\n                    point.x = overviewMetric.startX + pointIndex * this.config.overviewPointWidth;\n                    point.color = this.getColorFromMap(point.value, this.overviewModel.metricList[metricIndex].colorMap);\n                    this.overviewContext.fillStyle = point.color;\n                    this.overviewContext.fillRect(point.x, instance.y, this.config.overviewPointHeight, this.config.overviewPointHeight);\n                    endX = point.x;\n                });\n\n                overviewMetric.endX = endX;\n            });\n        });\n    }\n\n    getColorFromMap(value, map) {\n        var result;\n\n        map.forEach((color, threshold) => {\n            if (threshold.min <= value && value <= threshold.max) {\n                result = color;\n            }\n        });\n\n        return \"#\" + result;\n    }\n\n    initialiseCanvases() {\n        this.overviewCanvas = this.elem.find(\"#overviewCanvas\")[0];\n        this.overviewContext = this.overviewCanvas.getContext(\"2d\");\n\n        this.focusAreaCanvas = this.elem.find(\"#focusAreaCanvas\")[0];\n        this.focusAreaContext = this.focusAreaCanvas.getContext(\"2d\");\n\n        this.focusGraphCanvas = this.elem.find(\"#focusGraphCanvas\")[0];\n        this.focusGraphContext = this.focusGraphCanvas.getContext(\"2d\");\n        this.focusGraphContext.font = this.config.fontSize + \"px arial\";\n    }\n\n    selectLinker() {\n        this.drawFocusArea();\n    }\n\n    moveFocusArea(evt) {\n        if (!this.focusAreaIsFixed) {\n            this.drawFocus(evt);\n            evt.preventDefault();\n        }\n    }\n\n    fixFocusArea(evt) {\n        if (this.focusAreaIsFixed) {\n            this.drawFocus(evt);\n        }\n\n        this.focusAreaIsFixed = !this.focusAreaIsFixed;\n        evt.preventDefault();\n    }\n\n    drawFocus(evt) {\n        this.focusModel.mousePosition = this.getMousePos(evt, this.overviewCanvas);\n        this.drawFocusArea();\n        this.drawFocusGraph();\n    }\n\n    clearFocus() {\n        this.hasFocus = false;\n        this.focusAreaContext.clearRect(0, 0, this.focusAreaCanvas.width, this.focusAreaCanvas.height);\n        this.focusGraphContext.clearRect(0, 0, this.focusGraphCanvas.width, this.focusGraphCanvas.height);\n    }\n\n    getMousePos(evt, canvas) {\n        var rect = canvas.getBoundingClientRect();\n\n        return {\n            x: evt.clientX - rect.left,\n            y: evt.clientY - rect.top\n        };\n    }\n\n    drawFocusArea() {\n        if (this.focusModel.mousePosition) {\n            var size = this.getFocusAreaSize();\n            this.focusModel.focusStartY = Math.min(Math.max(0, this.focusModel.mousePosition.y - size / 2), this.overviewCanvas.height - size);\n\n            if (this.config.overviewMode == 1) {\n                this.drawSingleFocusArea();\n            } else {\n                this.drawMultipleFocusArea(true);\n            }\n        }\n    }\n\n    getFocusAreaSize() {\n        return this.config.focusAreaSize * 2;\n    }\n\n    drawSingleFocusArea() {\n        this.clearFocus();\n        var size = this.getFocusAreaSize();\n        this.focusModel.focusStartY = Math.min(Math.max(0, this.focusModel.mousePosition.y - size / 2), this.overviewCanvas.height - this.getFocusAreaSize());\n        this.focusModel.focusStartX = Math.min(Math.max(0, this.focusModel.mousePosition.x - this.config.focusAreaSize), this.overviewCanvas.width - size);\n        this.focusAreaContext.strokeStyle = this.config.focusAreaColor;\n        this.focusAreaContext.strokeRect(this.focusModel.focusStartX, this.focusModel.focusStartY, size, size);\n    }\n\n    drawMultipleFocusArea(doDrawLinkers) {\n        var size = this.getFocusAreaSize();\n        var offset = this.getFocusAreaOffset();\n\n        if (offset >= 0) {\n            if (doDrawLinkers) {\n                this.clearFocus();\n            }\n\n            this.focusAreaContext.strokeStyle = this.config.focusAreaColor;\n\n            this.overviewModel.metricList.forEach((metric) => {\n                metric.focusStartX = metric.startX + offset;\n                this.focusAreaContext.strokeRect(metric.focusStartX, this.focusModel.focusStartY, size, size);\n            });\n\n            if (doDrawLinkers) {\n                this.drawLinkers();\n            }\n        }\n    }\n\n    getFocusAreaOffset() {\n        for (var i = 0; i < this.overviewModel.metricList.length; ++i) {\n            var metric = this.overviewModel.metricList[i];\n\n            if (this.checkMouseIsInMetric(metric)) {\n                this.focusModel.mousePositionXOffset = this.focusModel.mousePosition.x - metric.startX;\n                return Math.min(Math.max(metric.startX, this.focusModel.mousePosition.x - this.config.focusAreaSize), metric.endX - this.getFocusAreaSize()) -\n                    metric.startX;\n            }\n        }\n    }\n\n    checkMouseIsInMetric(metric) {\n        return metric.startX <= this.focusModel.mousePosition.x && this.focusModel.mousePosition.x <= metric.endX;\n    }\n\n    drawLinkers() {\n        var pixelData = this.overviewContext.getImageData(this.focusModel.mousePosition.x, this.focusModel.mousePosition.y, 1, 1).data;\n        this.focusAreaContext.strokeStyle = \"rgb(\" + pixelData[0] + \",\" + pixelData[1] + \",\" + pixelData[2] + \")\";\n        var instance = this.getLinkerTargetInstance();\n\n        this.overviewModel.metricList.forEach((metric, index) => {\n            if (!this.checkMouseIsInMetric(metric)) {\n                switch (this.scope.ctrl.linkingMode) {\n                    case \"xCross\":\n                        this.drawXCross(metric, instance);\n                        break;\n\n                    case \"normalCross\":\n                        this.drawDoubleLine(metric, instance);\n                        break;\n\n                    case \"changeColor\":\n                        this.changeInstanceColor(metric, instance, index);\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        });\n    }\n\n    drawXCross(metric, instance) {\n        var x = metric.startX + this.focusModel.mousePositionXOffset;\n        var leftBeginX = x - this.config.xCrossSize;\n        var rightBeginX = x + this.config.overviewPointWidth;\n        var bottomInstance = instance.y + this.config.overviewPointHeight;\n        this.drawXCrossLine(leftBeginX, instance.y - this.config.xCrossSize, instance.y);\n        this.drawXCrossLine(rightBeginX, instance.y, instance.y - this.config.xCrossSize);\n        this.drawXCrossLine(leftBeginX, bottomInstance + this.config.xCrossSize, bottomInstance);\n        this.drawXCrossLine(rightBeginX, bottomInstance, bottomInstance + this.config.xCrossSize);\n    }\n\n    drawXCrossLine(startX, startY, endY) {\n        this.drawLineOnFocusAreaCanvas(startX, startY, startX + this.config.xCrossSize, endY);\n    }\n\n    drawLineOnFocusAreaCanvas(startX, startY, endX, endY) {\n        this.focusAreaContext.beginPath();\n        this.focusAreaContext.moveTo(startX, startY);\n        this.focusAreaContext.lineTo(endX, endY);\n        this.focusAreaContext.stroke();\n        this.focusAreaContext.closePath();\n    }\n\n    drawDoubleLine(metric, instance) {\n        var verticalLineX = metric.startX + this.focusModel.mousePositionXOffset;\n        var topLineX = verticalLineX + this.config.overviewPointWidth;\n        var bottonLineX = verticalLineX - this.config.overviewPointWidth;\n        this.drawLineOnFocusAreaCanvas(topLineX, 0, topLineX, instance.y - this.config.overviewPointHeight);\n        this.drawLineOnFocusAreaCanvas(bottonLineX, instance.y + this.config.overviewPointHeight, bottonLineX, this.focusAreaCanvas.height);\n\n        var centerX = metric.startX + this.focusModel.mousePositionXOffset;\n        var leftLineY = instance.y + this.config.overviewPointHeight;\n        var rightLineY = instance.y - this.config.overviewPointHeight;\n        this.drawLineOnFocusAreaCanvas(metric.startX, leftLineY, centerX - this.config.overviewPointWidth, leftLineY);\n        this.drawLineOnFocusAreaCanvas(centerX + this.config.overviewPointWidth, rightLineY, metric.endX, rightLineY);\n    }\n\n    changeInstanceColor(metric, instance, index) {\n        if (index == 0) {\n            this.clearFocus();\n        }\n\n        this.drawLineOnFocusAreaCanvas(metric.startX, instance.y, metric.endX, instance.y);\n\n        if (index == instance.metricList.length - 1) {\n            this.drawMultipleFocusArea(false);\n        }\n    }\n\n    getLinkerTargetInstance() {\n        for (var i = 0; i < this.overviewModel.data.length; ++i) {\n            var instance = this.overviewModel.data[i];\n\n            if (instance.y <= this.focusModel.mousePosition.y && this.focusModel.mousePosition.y <= instance.y + this.config.overviewPointHeight) {\n                return instance;\n            }\n        }\n    }\n\n    drawFocusGraph() {\n        this.initialiseFocusGraphData();\n        this.drawFocusGraphLabels();\n        this.drawFocusGraphData();\n    }\n\n    initialiseFocusGraphData() {\n        this.focusModel.data = [];\n\n        this.overviewModel.data.forEach((overviewInstance) => {\n            if (overviewInstance.y <= this.focusModel.focusStartY + this.getFocusAreaSize() &&\n                overviewInstance.y + this.overviewModel.overviewInstantHeight >= this.focusModel.focusStartY) {\n                var modalInstance = {};\n                modalInstance.instance = overviewInstance.instance;\n                modalInstance.metricList = [];\n                this.addFocusMetrics(modalInstance, overviewInstance, this.getIndexesOfPointsInFocus(overviewInstance));\n                this.initialiseInstanceLayers(modalInstance);\n                this.focusModel.data.push(modalInstance);\n            }\n        });\n    }\n\n    getIndexesOfPointsInFocus(instance) {\n        var indexes = [];\n\n        for (var i = 0; i < instance.metricList.length; ++i) {\n            var metric = instance.metricList[i];\n\n            if (metric.length > 0) {\n                var overviewMetric = this.overviewModel.metricList[i];\n\n                metric.forEach((point, index) => {\n                    if (overviewMetric.focusStartX <= point.x && point.x <= overviewMetric.focusStartX + this.getFocusAreaSize()) {\n                        indexes.push(index);\n                    }\n                });\n\n                break;\n            }\n        }\n\n        return indexes;\n    }\n\n    addFocusMetrics(modalInstance, overviewInstance, indexes) {\n        this.overviewModel.metricList.forEach((metric, metricIndex) => {\n            var focusMetric = {};\n            focusMetric.data = [];\n            focusMetric.layerList = [];\n\n            indexes.forEach((index) => {\n                var point = overviewInstance.metricList[metricIndex][index];\n\n                if (point) {\n                    focusMetric.data.push(point);\n                }\n            });\n\n            modalInstance.metricList.push(focusMetric);\n        });\n    }\n\n    initialiseInstanceLayers(instance) {\n        instance.metricList.forEach((metric, index) => {\n            this.config.colors.forEach(() => {\n                var layer = {};\n                layer.valueList = [];\n                metric.layerList.push(layer);\n            });\n\n            metric.data.forEach((point) => {\n                var value = point.value;\n\n                metric.layerList.forEach((layer) => {\n                    layer.valueList.push(value > 0 ? value : 0);\n                    value -= this.overviewModel.metricList[index].layerRange;\n                });\n            });\n        });\n    }\n\n    drawFocusGraphLabels() {\n        this.focusModel.horizontalX = 0;\n        this.focusGraphContext.setLineDash([10, 10]);\n        this.focusGraphContext.fillStyle = \"black\";\n        this.focusModel.instanceHeight = this.config.focusMetricMaxHeight * this.overviewModel.metricList.length +\n            this.config.marginBetweenFocusMetrics * (this.overviewModel.metricList.length - 1) + this.config.marginBetweenFocusInstances;\n\n        this.focusModel.data.forEach((instance, index) => {\n            this.drawFocusGraphLabelByInstance(instance, index);\n        });\n\n        this.focusModel.horizontalX += this.config.focusGraphLeftMargin;\n    }\n\n    drawFocusGraphLabelByInstance(instance, index) {\n        var label = instance.instance;\n        var metrics = this.focusGraphContext.measureText(label);\n        instance.y = index * this.focusModel.instanceHeight;\n        var labelY = instance.y + this.focusModel.instanceHeight / 2;\n        this.focusGraphContext.fillText(label, 0, labelY);\n\n        if (index > 0) {\n            this.drawSeperator(instance);\n        }\n\n        if (metrics.width > this.focusModel.horizontalX) {\n            this.focusModel.horizontalX = metrics.width;\n        }\n    }\n\n    drawSeperator(instance) {\n        var lineY = instance.y - this.config.marginBetweenFocusInstances / 2;\n        this.focusGraphContext.beginPath();\n        this.focusGraphContext.moveTo(0, lineY);\n        this.focusGraphContext.lineTo(10000, lineY);\n        this.focusGraphContext.stroke();\n    }\n\n    drawFocusGraphData() {\n        this.focusModel.data.forEach((instance) => {\n            instance.metricList.forEach((metric, metricIndex) => {\n                metric.layerList.forEach((layer, layerIndex) => {\n                    var y = instance.y + (this.config.focusMetricMaxHeight + this.config.marginBetweenFocusMetrics) * metricIndex + this.config.focusMetricMaxHeight;\n                    this.focusGraphContext.beginPath();\n                    this.focusGraphContext.moveTo(this.focusModel.horizontalX, y);\n                    var x = this.focusModel.horizontalX;\n                    var previousX = x;\n                    var previousValue = 0;\n\n                    layer.valueList.forEach((value, valueIndex) => {\n                        x += valueIndex * this.config.focusPointWidth;\n                        this.moveContextBasedOnValue(value, previousX, previousValue, layerIndex, x, y, this.overviewModel.metricList[metricIndex].layerRange);\n                        previousX = x;\n                        previousValue = value;\n                    });\n\n                    this.focusGraphContext.lineTo(x, y);\n                    this.focusGraphContext.lineTo(this.focusModel.horizontalX, y);\n                    this.focusGraphContext.closePath();\n                    this.focusGraphContext.fillStyle = \"#\" + this.config.colors[metricIndex][layerIndex];\n                    this.focusGraphContext.fill();\n                });\n            });\n        });\n    }\n\n    moveContextBasedOnValue(value, previousX, previousValue, layerIndex, x, y, layerRange) {\n        if (value == 0) {\n            this.focusGraphContext.lineTo(previousX, y);\n        } else {\n            if (layerIndex > 0 && previousValue == 0) {\n                this.focusGraphContext.lineTo(x, y);\n            }\n\n            if (value >= layerRange) {\n                this.focusGraphContext.lineTo(x, y - this.config.focusMetricMaxHeight);\n            } else {\n                this.focusGraphContext.lineTo(x, y - value * this.config.focusMetricMaxHeight / layerRange);\n            }\n        }\n    }\n\n    selectNode() {\n        if (!this.isUpdatingVariable) {\n            var mousePos = this.getMousePos(event, this.focusGraphCanvas);\n            var height = this.focusModel.instanceHeight;\n\n            for (var i = 0; i < this.focusModel.data.length; ++i) {\n                if (height * i <= mousePos.y && mousePos.y <= height * (i + 1)) {\n                    this.updateVariable(this.focusModel.data[i]);\n                    break;\n                }\n            }\n        }\n    }\n\n    updateVariable(instance) {\n        this.variableSrv.variables.forEach((v) => {\n            if (v.name == \"node\") {\n                this.variableSrv.setOptionAsCurrent(v, {\n                    text: instance.instance,\n                    value: instance.instance\n                });\n\n                this.isUpdatingVariable = true;\n                this.variableSrv.variableUpdated(v, true);\n            }\n        });\n    }\n}\n\nHeatmapCtrl.templateUrl = \"module.html\";"],"file":"heatmap_ctrl.js"}